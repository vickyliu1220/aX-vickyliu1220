install.packages("ggplot2")
library("ggplot2")
library(ggplot2)
df <- data.frame(
label = c("A", "B", "C", "D"),
value = 1:4,
stringsAsFactors = F
)
ggplot(df) +
geom_col(mapping = aes(x = label, y = value, fill = "blue"))
You can also embed plots, for example:
## Including Plots
# Load packages
library("dplyr")
library("ggmap")
library("ggplot2")
# Load data from GitHub
permit_data <- read.csv(
"https://raw.githubusercontent.com/programming-for-data-science/in-action/master/interactive-vis/data/Building_Permits.csv",
stringsAsFactors = F)
# Formatting and filtering data
samp <- permit_data %>%
filter(!is.na(Longitude), !is.na(Latitude), Longitude <0, Latitude < 100) %>%
filter(PermitTypeDesc == "New") %>%
mutate(year = as.numeric(substr(IssuedDate, 1, 4))) %>%
filter(year > 2010)
# Chart option 1: years as categories
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = as.character(year)
) + scale_color_discrete() +
labs(color = "Year")
# Chart option 2: years as continuous
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = year
) + scale_color_continuous() +
labs(color = "Year")
## Including Plots
# Load packages
library("dplyr")
library("ggmap")
library("ggplot2")
# Load data from GitHub
permit_data <- read.csv(
"https://raw.githubusercontent.com/programming-for-data-science/in-action/master/interactive-vis/data/Building_Permits.csv",
stringsAsFactors = F)
# Formatting and filtering data
samp <- permit_data %>%
filter(!is.na(Longitude), !is.na(Latitude), Longitude <0, Latitude < 100) %>%
filter(PermitTypeDesc == "New") %>%
mutate(year = as.numeric(substr(IssuedDate, 1, 4))) %>%
filter(year > 2010)
# Chart option 1: years as categories
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = as.character(year)
) + scale_color_discrete() +
labs(color = "Year")
# Chart option 2: years as continuous
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = year
) + scale_color_continuous() +
labs(color = "Year")
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = as.character(year)
) + scale_color_discrete() +
labs(color = "Year")
https://raw.githubusercontent.com/programming-for-data-science/in-action/master/interactive-vis/data/Building_Permits.csv
library("ggmap")
install.packages("ggmap)
install.packages("ggplot2")
library("ggplot2")
permit_data <- read.csv(
"https://raw.githubusercontent.com/programming-for-data-science/in-action/master/interactive-vis/data/Building_Permits.csv",
stringsAsFactors = F)
# Formatting and filtering data
samp <- permit_data %>%
filter(!is.na(Longitude), !is.na(Latitude), Longitude <0, Latitude < 100) %>%
filter(PermitTypeDesc == "New") %>%
mutate(year = as.numeric(substr(IssuedDate, 1, 4))) %>%
filter(year > 2010)
# Chart option 1: years as categories
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = as.character(year)
) + scale_color_discrete() +
labs(color = "Year")
# Chart option 2: years as continuous
qmplot(
data = samp,
x = Longitude,
y = Latitude,
color = year
) + scale_color_continuous() +
labs(color = "Year")
data <- read.csv("uspollution_pollution_us_2000_2016.csv",
header = TRUE,
stringsAsFactors = FALSE)
setwd("~/Desktop/info201/aX- extra cr")
data <- read.csv("uspollution_pollution_us_2000_2016.csv",
header = TRUE,
stringsAsFactors = FALSE)
summary_table <- data %>%
group_by(State) %>%
filter(State == "Arizona") %>%
select(State, Date.Local, NO2.1st.Max.Value, O3.1st.Max.Value, SO2.1st.Max.Value)
library("ggplot2")
library("dplyr")
summary_table <- data %>%
group_by(State) %>%
filter(State == "Arizona") %>%
select(State, Date.Local, NO2.1st.Max.Value, O3.1st.Max.Value, SO2.1st.Max.Value)
ggplot(data = summary_table) +
geom_point (
mapping = aes(x = as.Date(Date.Local), y = NO2.1st.Max.Value)
)
ggplot(data = summary_table) +
geom_point (
mapping = aes(x = as.Date(Date.Local), y = NO2.1st.Max.Value)
)
ggplot(data = summary_table) +
geom_line (
mapping = aes(x = as.Date(Date.Local), y = NO2.1st.Max.Value)
)
View(data)
View(data)
ggplot(data = summary_table) +
geom_line (
mapping = aes(x = as.Date(Date.Local), y = O3.1st.Max.Value)
)
ggplot(data = summary_table) +
geom_line (
mapping = aes(x = as.Date(Date.Local), y = SO2.1st.Max.Value)
)
shiny::runApp()
conclustion <- tabPanel(
titlePanel("Conclusion")
)
ui <- navbarPage(
"U.S Pollution Investiment",
introduction,
data_graphics,
conclusion
)
library(shiny)
library("dplyr")
library("ggplot2")
introduction <- tabPanel(
titlePanel("Introduction"),
h2("When?"),
p("The data was collected during 2000 - 2016"),
h2("Where?"),
p("The data collected mainly in the United States,
It deals with the pollution in the U.S."),
h2("Who?"),
p("U.S. EPA, which stands for the Environmental Protection
Agency contributed to the collection of the data. It is
a governmental department, estavlished in Decemeber 1970 by
an executive order of President Richard Nixon. It is an agency of the
United States federal government whose mission is to protect human
and environmental health. "),
h2("Why?"),
p("The reason for presenting this data is to get a better understanding
of the air pollution in U.S. The government realizes that there are more and
more serious problem in our environment, which included the air pollution. The four
pollutants are specifically targeted: NO2 Units(The units measured for NO2),
NO2 Mean(The arithmetic mean of concentration of NO2 within a given day),
NO2 AQI(The calculated air quality index of NO2 within a given day),
NO2 1st Max Value(The maximum value obtained for NO2 concentraion in a given day
), NO2 1st Max Hour(The hour when the maximum NO2 concentration was recorded in a given day).")
)
data_graphics <- tabPanel(
titlePanel("Data Graphics"),
sidebarLayout(
sidebarPanel(
selectInput(
"state",
"Please choose a state",
choices = summary_table$State
)
),
mainPanel(
plotOutput("graph_state")
)
)
)
conclustion <- tabPanel(
titlePanel("Conclusion")
)
ui <- navbarPage(
"U.S Pollution Investiment",
introduction,
data_graphics,
conclusion
)
runApp()
runApp()
runApp()
runApp()
library(shiny)
library("server.R")
library("ui.R")
library("shinythemes")
shinyApp(ui = ui, server = server)
library(shiny)
library("dplyr")
library("ggplot2")
# source("ui.R")
server <- function(input, output){
ebola_data <- read.csv("ebola_data_db_format.csv",
header = TRUE, stringsAsFactors = FALSE)
output$graph_state <- renderPlot({
summary_table <- ebola_data %>%
group_by(Country) %>%
filter(Indicator == "Cumulative number of confirmed Ebola deaths",
Country == input$country)
ggplot(data = summary_table) +
geom_point (
mapping = aes(x = as.Date(Date), y = value)
) +
scale_color_brewer(palette = "Set3") + ggtitle("Cumulative number of
confirmed Ebola deaths") +
xlab("Year") + ylab("Number of people")
})
}
library(shiny)
library("dplyr")
library("ggplot2")
library("shinythemes")
ebola_data <- read.csv("ebola_data_db_format.csv",
header = TRUE, stringsAsFactors = FALSE)
introduction <- tabPanel(
titlePanel("Introduction"),
h2("When?"),
p("Ebola data in record format with indicator, c
ountry, date and value from Aug 29, 2014 - Mar 23, 2016"),
h2("Where?"),
p("The information in the various pages of the WHO web site
is issued by the World Health Organization for general distribution"),
h2("Who?"),
p("The data was collected by the world health organization, which dedicated for finding the
potential threatens for the mankind.The data collects the information based on the total number of probable, confirmed and suspected Ebola
cases and deaths in Guinea, Liberia, Sierra Leone, Nigeria, Senegal, Mali, Spain USA, UK and Italy according to Ebola Data and Statistics."),
h2("Why?"),
p("The reason for presenting this data is to get a better understanding
of the deadly killed virsus Ebola. It generally shows the numbers of Ebola cases and
deaths in affected countries")
)
data_graphics <- tabPanel(
titlePanel("Data Graphics"),
sidebarLayout(
sidebarPanel(
selectInput(
"country",
"Please choose a country",
choices = unique(ebola_data$Country)
)
),
mainPanel(
plotOutput("graph_state")
)
)
)
conclusion <- tabPanel(
titlePanel("Conclusion"),
p("From this dataset, I learned the seriousness of Ebola. The stakeholders of this data
are all human kind because we are all facing this serious health problem, and it is
our responsibility to take it as serious as possible since we have the same enermy.
From this dataset, we learned that people from developing countries are more likely to get
affected by Ebola. It is important for the World Health Organization as well as the developed
countries to focus on this on-going issues worldwide.
Overall, this dataset gives a more clear direction on which area we should be focus on when
dealing with our common enermy -- 'Ebola'. As Ebola may outbreak anytime in the future,
and there is no way yet to fully cured the virsus. We need to prepare for a better world as to prevent
the Ebola as best as possible.")
)
ui <- navbarPage(
theme = shinytheme("cerulean"),
"U.S Pollution Investiment",
introduction,
data_graphics,
conclusion
)
runApp()
if (!requireNamespace("devtools")) install.packages("devtools")
devtools::install_github("rstudio/packrat")
warning()
warnings()
warnings()
shiny::runApp()
setwd("~/Desktop/info201/aX-vickyliu1220/app")
setwd("~/Desktop/info201/aX-vickyliu1220/app")
shiny::runApp()
